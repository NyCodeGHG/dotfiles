{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "extends": [
    "config:base",
    "helpers:pinGitHubActionDigests"
  ],
  "timezone": "Europe/Berlin",
  "regexManagers": [
    {
      "description": "Update docker images in nix files.",
      "fileMatch": [
        "\\.nix$"
      ],
      "matchStrings": [
        "\"(?<depName>(?:ghcr\\.io|docker\\.io|quay\\.io)[^:]*):(?<currentValue>.*)\""
      ],
      "datasourceTemplate": "docker"
    },
    {
      "description": "Update caddy version",
      "fileMatch": [
        "\\.y(?:a)?ml$"
      ],
      "matchStrings": [
        "caddy_version: \"(?<currentValue>.*)\""
      ],
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.*)$",
      "depNameTemplate": "caddyserver/caddy"
    },
    {
      "description": "Update trash-guides repository git sha",
      "fileMatch": ["hosts/marie-nas/media-config/config/config.yml"],
      "matchStrings": ["trashRevision: (?<currentDigest>.*?)\\n"],
      "currentValueTemplate": "master",
      "depNameTemplate": "TRaSH-Guides",
      "packageNameTemplate": "https://github.com/TRaSH-Guides/Guides",
      "datasourceTemplate": "git-refs"
    }
  ],
  "packageRules": [
    {
      "matchPackagePrefixes": [
        "ghcr.io/goauthentik/"
      ],
      "groupName": "authentik",
      "sourceUrl": "https://github.com/goauthentik/authentik"
    },
    {
      "matchPackageNames": [
        "ghcr.io/coder/coder"
      ],
      "enabled": false
    },
    {
      "matchManagers": ["nix"],
      "lockFileMaintenance": {
        "enabled": false
      }
    },
    {
      "matchPackageNames": [
        "ubuntu"
      ],
      "matchDatasources": [
        "github-runners"
      ],
      "matchFileNames": [
        ".forgejo/workflows/*.yaml",
        ".forgejo/workflows/*.yml"
      ],
      "enabled": false
    },
    {
      "matchPackageNames": ["https://github.com/TRaSH-Guides/Guides"],
      "schedule": "every weekend"
    }
  ],
  "enabledManagers": [
    "regex",
    "terraform",
    "github-actions",
    "nix",
    "ansible-galaxy"
  ]
}
